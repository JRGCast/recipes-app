{"version":3,"sources":["images/shareIcon.svg","images/blackHeartIcon.svg","images/whiteHeartIcon.svg","images/profileIcon.svg","images/searchIcon.svg","images/drinkIcon.svg","images/mealIcon.svg","images/exploreIcon.svg","services/api.js","context/ContextDrink.js","context/ContextFood.js","components/Search/index.js","components/Header/index.js","components/Card/index.js","components/Footer/index.js","components/Buttons/ExploreByWhat.js","components/Buttons/CategoryButtons.js","pages/Drinks/Drinks.js","pages/hooks/useDrinkDetailsHook.js","pages/hooks/useFavoritesHook.js","components/Card/CarouselCard.js","components/DrinkDetailsInfo/index.js","pages/Drinks/DrinkDetails.js","components/Card/InProgressCard.js","pages/hooks/useDoneRecipesHook.js","pages/Drinks/DrinkInProgress.js","pages/Explorer/Explorer.js","pages/Explorer/ExplorerDrink.js","components/Card/IngredientCard.js","pages/Explorer/ExplorerDrinksIngredients.js","pages/Explorer/ExplorerFood.js","pages/Explorer/ExplorerFoodsIngredients.js","pages/Explorer/ExplorerFoodsRegion.js","pages/Foods/Foods.js","pages/hooks/useFoodDetailsHook.js","components/FoodDetailsInfo/index.js","pages/Foods/FoodDetails.js","pages/Foods/FoodInProgress.js","pages/Login/index.js","pages/NotFound/index.js","pages/Profile/Profile.js","pages/Profile/DoneRecipes.js","components/Card/CardFavorites.js","pages/Profile/FavRecipes.js","routes/routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FOOD_DETAILS","FILTER_FOODS_API","FILTER_DRINKS_API","getFoodFiltredById","id","a","fetch","api","json","meals","console","log","res","getDrinkFiltredById","drinks","getRandomRecipe","query","currentPage","RANDOM_API","result","showCompleteLists","LIST_API","charAt","filterArea","AREA_API","filterCategory","CATEGORY_API","filterIngredient","INGREDIENT_API","filterName","SEARCH_BASE_API","filterFirstLetter","DrinkCtx","createContext","ContextDrink","props","children","useState","drinkApi","setDrinkApi","key","value","filterDrink","setFilterDrink","useEffect","i","n","length","alert","f","c","connect","Provider","FoodCtx","ContextFood","foodApi","setFoodApi","filterFood","setFilterFood","Search","useContext","radio","setRadio","input","setInput","handleChangeRadio","target","className","onSubmit","e","preventDefault","onChange","type","data-testid","htmlFor","name","Header","isSearch","setIsSearch","icon","to","src","profile","alt","onClick","search","Card","img","index","role","tabIndex","onKeyDown","Footer","drinkIcon","exploreIcon","mealIcon","ExploreByWhat","ptBr","dataTestId","testId","style","boxSizing","margin","padding","CategoryButtons","label","onClickAll","onClickCategory","fullList","setFullList","firstFive","setFirstFive","fetchList","match","getList","mapping","filter","element","map","checkFullList","renderButtons","strCategory","Drinks","state","location","category","setCategory","ingredient","setIngredient","history","useHistory","fromExplorerDrinksIngredients","undefined","categoryState","drink","item","idDrink","strDrink","strDrinkThumb","push","defaultProps","PropTypes","shape","pathname","string","hash","useDrinkDetailsHook","setId","recipe","setRecipe","ingredientsAndMeasuresList","setIngredientsAndMeasuresList","isDone","setISDone","createIngredientList","receita","ingredientList","quantitiesList","ingredientAndMeasure","qua","mes","idNum","currRecipe","fetchRecipe","isItDone","localData","localStorage","getItem","doneRecipesList","JSON","parse","find","each","checkDoneRecipes","strInstructions","strAlcoholic","useFavoritesHook","favorites","setFavorites","newFav","setItem","stringify","isFav","newFavorites","fav","CarouselCard","hidden","DrinkDetailsInfo","handleFavorite","isFavorite","handleClick","copied","shareIcon","blackHeartIcon","whiteHeartIcon","ingr","ing","meal","idMeal","strMeal","strMealThumb","initialInProgressRecipesValue","cocktails","DrinkDetails","shouldRedirect","setShouldRedirect","setCopied","setIsFavorite","params","updateFavorites","inProgressRecipes","setInProgressRecipes","isInProgress","setIsInProgress","handleStartRecipeClick","newFoodInProgress","Object","assign","addDrinkInProgress","inProgress","idNumber","keys","includes","checkIsInProgress","area","alcoholicOrNot","image","copy","window","href","InProgressCard","url","title","ingredients","alcohol","instructions","isDrinkOrFood","setIsDrinkOrFood","forMap","setForMap","noTwoSpace","checked","onChangeCB","theIndex","findIndex","position","inserting","theMap","filtered","array","elementToInsert","splice","reInsertAtCorrectPos","ingredientsMapping","instructionsMapping","split","trim","toUpperCase","slice","useDoneRecipesHook","foodOrDrink","doneRecipes","setDoneRecipes","parsed","allDoneRecipes","doneFoodRecipes","doneDrinkRecipes","hasBeenDone","doneRcp","newDoneRecipes","DrinkInProgress","filteredById","setFilteredById","isEmpty","obj","buttonsDiv","replace","fetchById","requestingAPI","display","flexFlow","Explorer","renderExplorerButtons","ExplorerDrink","randomRecipeNumber","setRandomRecipeNumber","setting","setTheRandom","IngredientCard","ExplorerDrinksIngredients","ingredientsList","setIngredientsList","redirectToDrinks","setRedirectToDrinks","requestList","requestNSet","strIngredient1","ExplorerFood","ExplorerFoodsIngredients","redirectToFoods","setRedirectToFoods","idIngredient","strIngredient","fromExplorerFoodsIngredients","ExplorerFoodsRegion","areaList","setAreaList","selectedArea","setSelectedArea","mealList","setMealList","requestAreaList","setTheList","requestMealList","setTheMealList","areaOptions","strArea","Foods","useFoodDetailsHook","then","data","strYoutube","FoodDetailsInfo","width","height","frameBorder","allow","allowFullScreen","FoodDetails","addFoodInProgress","FoodInProgress","Login","email","password","user","setUser","isDisabled","setIsDisabled","redirect","setRedirect","isValidEmail","test","isValidPassword","handleChange","placeholder","required","autoComplete","disabled","NotFound","alignItems","justifyContent","textAlign","marginTop","Profile","clear","DoneRecipes","setDoneRecipesList","filteredDoneRecipes","setFilteredDoneRecipes","copyDetailsPageLink","filterDoneRecipes","innerText","filteredByFood","rec","filteredByDrink","arrayEveryThing","concat","doneDate","renderRecipe","CardFavorites","removeFavorite","desc","copyLink","setCopyLink","favIcon","FavRecipes","setFilter","forceUpdate","idx","newLocalStorage","_","card","routes","path","component","exact","App","backgroundColor","borderRadius","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.66b1316c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","const FOOD_API = 'https://www.themealdb.com/api.php';\nconst DRINK_API = 'https://www.thecocktaildb.com/api.php';\nconst FOOD_DETAILS = 'https://www.themealdb.com/api/json/v1/1/lookup.php?i=';\nconst DRINK_DETAILS = 'https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=';\nconst FILTER_FOODS_API = 'https://www.themealdb.com/api/json/v1/1/filter.php';\nconst FILTER_DRINKS_API = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php';\nconst FILTER_DRINK_ID = 'https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=';\n\nexport const getFoodFiltredById = async (id) => {\n  const api = await fetch(FOOD_DETAILS + id, { 'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Credentials': true });\n  const { meals } = await api.json();\n  console.log('foods', meals);\n  const res = { ...meals[0] };\n  return res;\n};\n\nexport const getDrinkFiltredById = async (id) => {\n  const api = await fetch(FILTER_DRINK_ID + id, { 'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Credentials': true });\n  const { drinks } = await api.json();\n  console.log('dr', drinks);\n  const res = { ...drinks[0] };\n  return res;\n};\n\nexport const getRandomRecipe = async (query, currentPage) => {\n  // lists:\n  // FoodApi: (c)ategories, (i)ngredients, (a)rea;\n  // DrinkApi: (c)ategories, (g)lasses, (i)ngredients or (a)lcoholic filters;\n  const RANDOM_API = currentPage === 'Foods'\n    ? 'https://www.themealdb.com/api/json/v1/1/'\n    : 'https://www.thecocktaildb.com/api/json/v1/1/';\n  const api = await fetch(`${RANDOM_API}${query}.php`);\n  const result = await api.json();\n  return result;\n};\nexport const showCompleteLists = async (query, currentPage) => {\n  // lists:\n  // FoodApi: (c)ategories, (i)ngredients, (a)rea;\n  // DrinkApi: (c)ategories, (g)lasses, (i)ngredients or (a)lcoholic filters;\n  const LIST_API = currentPage === 'Foods'\n    ? 'https://www.themealdb.com/api/json/v1/1/list.php'\n    : 'https://www.thecocktaildb.com/api/json/v1/1/list.php';\n  const api = await fetch(`${LIST_API}?${query.charAt(0)}=list`);\n  const result = await api.json();\n  return result;\n};\n\nexport const filterArea = async (query, currentPage) => {\n  const AREA_API = currentPage === 'Foods'\n    ? FILTER_FOODS_API\n    : FILTER_DRINKS_API;\n  const api = await fetch(`${AREA_API}?a=${query}`);\n  const result = await api.json();\n  console.log(result);\n  return result;\n};\n\nexport const filterCategory = async (query, currentPage) => {\n  const CATEGORY_API = currentPage === 'Foods'\n    ? FILTER_FOODS_API\n    : FILTER_DRINKS_API;\n  const api = await fetch(`${CATEGORY_API}?c=${query}`);\n  const result = await api.json();\n  console.log(result);\n  return result;\n};\nexport const filterIngredient = async (query, currentPage) => {\n  const INGREDIENT_API = currentPage === 'Drinks'\n    ? FILTER_DRINKS_API\n    : FILTER_FOODS_API;\n  const api = await fetch(`${INGREDIENT_API}?i=${query}`);\n  const result = await api.json();\n  console.log(result);\n  return result;\n};\n\nexport const filterName = async (query, currentPage) => {\n  const SEARCH_BASE_API = currentPage === 'Foods'\n    ? 'https://www.themealdb.com/api/json/v1/1/search.php'\n    : 'https://www.thecocktaildb.com/api/json/v1/1/search.php';\n\n  const api = await fetch(`${SEARCH_BASE_API}?s=${query}`);\n  const result = await api.json();\n  return result;\n};\n\nexport const filterFirstLetter = async (query, currentPage) => {\n  const SEARCH_BASE_API = currentPage === 'Foods'\n    ? 'https://www.themealdb.com/api/json/v1/1/search.php'\n    : 'https://www.thecocktaildb.com/api/json/v1/1/search.php';\n\n  const api = await fetch(`${SEARCH_BASE_API}?f=${query}`);\n  const result = await api.json();\n  return result;\n};\n\nexport const apiFood = async () => {\n  const api = await fetch(FOOD_API);\n  const result = await api.json();\n  return result;\n};\n\nexport const apiFoodId = async (id) => {\n  const api = await fetch(FOOD_DETAILS + id);\n  const result = await api.json();\n  return result;\n};\n\nexport const apiDrink = async () => {\n  const api = await fetch(DRINK_API);\n  const result = await api.json();\n  return result;\n};\n\nexport const apiDrinkId = async (id) => {\n  const api = await fetch(DRINK_DETAILS + id);\n  const result = await api.json();\n  return result;\n};\n","import React, { useState, createContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { filterFirstLetter,\n  filterIngredient, filterName, filterCategory } from '../services/api';\n\nexport const DrinkCtx = createContext();\n\nfunction ContextDrink(props) { // ??\n  const { children } = props;\n  const [drinkApi, setDrinkApi] = useState([]);\n  const [filterDrink, setFilterDrink] = useState({ key: 'name', value: '' });\n  const { key, value } = filterDrink;\n\n  useEffect(() => {\n    async function connect() {\n      if (key === 'ing') {\n        const i = await filterIngredient(value, 'Drinks');\n        return setDrinkApi(i);\n      }\n      if (key === 'name') {\n        const n = await filterName(value, 'Drinks');\n        return setDrinkApi(n);\n      }\n      if (key === 'first') {\n        if (value.length > 1) {\n          // eslint-disable-next-line no-alert\n          alert('Sua busca deve conter somente 1 (um) caracter');\n          return;\n        }\n        const f = await filterFirstLetter(value, 'Drinks');\n        console.log(value);\n        return setDrinkApi(f);\n      }\n      if (key === 'category') {\n        const c = await filterCategory(value, 'Drinks');\n        return setDrinkApi(c);\n      }\n    }\n    connect();\n  }, [key, value]);\n\n  return (\n    <DrinkCtx.Provider\n      value={ { drinkApi, setDrinkApi, filterDrink, setFilterDrink } }\n    >\n      {children}\n    </DrinkCtx.Provider>\n  );\n}\n\nContextDrink.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default ContextDrink;\n","import React, { useState, createContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  filterFirstLetter,\n  filterIngredient, filterName, filterCategory } from '../services/api';\n\nexport const FoodCtx = createContext();\n\nfunction ContextFood(props) {\n  const { children } = props;\n  const [foodApi, setFoodApi] = useState([]);\n  const [filterFood, setFilterFood] = useState({ key: 'name', value: '' });\n  const { key, value } = filterFood;\n\n  useEffect(() => {\n    async function connect() {\n      if (key === 'ing') {\n        const i = await filterIngredient(value, 'Foods');\n        return setFoodApi(i);\n      }\n      if (key === 'name') {\n        const n = await filterName(value, 'Foods');\n        return setFoodApi(n);\n      }\n      if (key === 'first') {\n        if (value.length > 1) {\n          // eslint-disable-next-line no-alert\n          alert('Sua busca deve conter somente 1 (um) caracter');\n          return;\n        }\n        const f = await filterFirstLetter(value, 'Foods');\n        return setFoodApi(f);\n      }\n      if (key === 'category') {\n        const c = await filterCategory(value, 'Foods');\n        return setFoodApi(c);\n      }\n    }\n    connect();\n  }, [key, value]);\n\n  return (\n    <FoodCtx.Provider\n      value={ { foodApi, setFoodApi, filterFood, setFilterFood } }\n    >\n      {children}\n    </FoodCtx.Provider>\n  );\n}\n\nContextFood.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default ContextFood;\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Search.css';\nimport { FoodCtx } from '../../context/ContextFood';\nimport { DrinkCtx } from '../../context/ContextDrink';\n\nfunction Search(props) {\n  const { setFilterFood } = useContext(FoodCtx);\n  const { setFilterDrink } = useContext(DrinkCtx);\n  const [radio, setRadio] = useState('');\n  const [input, setInput] = useState('');\n\n  const handleChangeInput = ({ target }) => {\n    setInput(target.value);\n  };\n\n  const handleChangeRadio = ({ target }) => {\n    setRadio(target.value);\n  };\n\n  const handleSubmit = (e) => {\n    const { currentPage } = props;\n    e.preventDefault();\n    if (currentPage === 'Foods') {\n      setFilterFood({ key: radio, value: input });\n    } else {\n      setFilterDrink({ key: radio, value: input });\n    }\n  };\n\n  return (\n    <div className=\"search-container\">\n      <form onSubmit={ handleSubmit }>\n        <input\n          onChange={ handleChangeInput }\n          type=\"text\"\n          value={ input }\n          className=\"input-search\"\n          data-testid=\"search-input\"\n        />\n        <section className=\"radio\">\n          <label htmlFor=\"ing\">\n            Ingredientes:\n            <input\n              data-testid=\"ingredient-search-radio\"\n              type=\"radio\"\n              value=\"ing\"\n              onChange={ handleChangeRadio }\n              name=\"filter\"\n              id=\"ing\"\n            />\n          </label>\n          <label htmlFor=\"name\">\n            Nome:\n            <input\n              data-testid=\"name-search-radio\"\n              type=\"radio\"\n              value=\"name\"\n              onChange={ handleChangeRadio }\n              name=\"filter\"\n              id=\"name\"\n            />\n          </label>\n          <label htmlFor=\"first\">\n            Primeira Letra:\n            <input\n              data-testid=\"first-letter-search-radio\"\n              type=\"radio\"\n              value=\"first\"\n              onChange={ handleChangeRadio }\n              id=\"first\"\n              name=\"filter\"\n            />\n          </label>\n        </section>\n        <button data-testid=\"exec-search-btn\" type=\"submit\">Buscar</button>\n      </form>\n    </div>\n  );\n}\n\nSearch.propTypes = {\n  currentPage: PropTypes.string.isRequired,\n};\n\nexport default Search;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Header.css';\nimport { Link } from 'react-router-dom';\nimport profile from '../../images/profileIcon.svg';\nimport search from '../../images/searchIcon.svg';\nimport Search from '../Search';\n\nfunction Header(props) {\n  const [isSearch, setIsSearch] = useState(false);\n  const { name, icon, currentPage } = props;\n\n  const handleSearch = () => {\n    setIsSearch(!isSearch);\n  };\n\n  return (\n    <>\n      <header className=\"header-container\">\n        <Link to=\"/perfil\">\n          <img src={ profile } alt=\"Profile\" data-testid=\"profile-top-btn\" />\n        </Link>\n\n        <h2 data-testid=\"page-title\">\n          {name}\n        </h2>\n        {\n          (icon === 'false') ? <div /> : (\n            <button type=\"button\" onClick={ handleSearch }>\n              <img\n                src={ search }\n                alt=\"Profile\"\n                data-testid=\"search-top-btn\"\n              />\n            </button>\n          )\n        }\n      </header>\n      {isSearch && <Search currentPage={ currentPage } />}\n    </>\n  );\n}\n\nHeader.propTypes = {\n  name: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  currentPage: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport './Card.css';\nimport PropTypes from 'prop-types';\n\nfunction Card(props) {\n  const { id, name, img, index, onClick } = props;\n  return (\n    <div\n      name={ id }\n      className=\"card-container\"\n      data-testid={ `${index}-recipe-card` }\n      onClick={ onClick }\n      role=\"button\"\n      tabIndex={ index }\n      onKeyDown={ () => console.log('Cara, como esse linter é chato, Ave Maria') }\n    >\n      <h4 data-testid={ `${index}-card-name` }>{name}</h4>\n      <img src={ img } alt={ name } data-testid={ `${index}-card-img` } />\n    </div>\n  );\n}\n\nCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Card;\n","import React from 'react';\nimport './Footer.css';\nimport { Link } from 'react-router-dom';\nimport drinkIcon from '../../images/drinkIcon.svg';\nimport mealIcon from '../../images/mealIcon.svg';\nimport exploreIcon from '../../images/exploreIcon.svg';\n\nexport default function Footer() {\n  return (\n    <footer className=\"footer\" data-testid=\"footer\">\n      <Link to=\"/bebidas\">\n        <img src={ drinkIcon } alt=\"Drinks\" data-testid=\"drinks-bottom-btn\" />\n      </Link>\n      <Link to=\"/explorar\">\n        <img src={ exploreIcon } alt=\"Explore\" data-testid=\"explore-bottom-btn\" />\n      </Link>\n      <Link to=\"/comidas\">\n        <img src={ mealIcon } alt=\"Meals\" data-testid=\"food-bottom-btn\" />\n      </Link>\n    </footer>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ExploreByWhat = ({ ptBr, dataTestId, onClick }) => {\n  const testId = dataTestId === 'surprise'\n    ? (\n      <button\n        data-testid={ `explore-${dataTestId}` }\n        style={ { boxSizing: 'content-box', margin: '10px', padding: '5px' } }\n        type=\"button\"\n        onClick={ onClick }\n      >\n        {ptBr}\n      </button>\n    )\n    : (\n      <button\n        data-testid={ `explore-by-${dataTestId}` }\n        style={ { boxSizing: 'content-box', margin: '10px', padding: '5px' } }\n        type=\"button\"\n        onClick={ onClick }\n      >\n        {`Por ${ptBr}`}\n      </button>\n    );\n  return (\n    <div>{testId}</div>\n  );\n};\n\nExploreByWhat.propTypes = {\n  ptBr: PropTypes.string.isRequired,\n  dataTestId: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ExploreByWhat;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { showCompleteLists } from '../../services/api';\n\nconst CategoryButtons = ({ label, onClickAll, onClickCategory }) => {\n  const [fullList, setFullList] = useState([]);\n  const [firstFive, setFirstFive] = useState([]);\n  useEffect(() => {\n    async function getList() {\n      const fetchList = await showCompleteLists('categories', label);\n      setFullList(label.match(/drinks/i) ? fetchList.drinks : fetchList.meals);\n    }\n    getList();\n  }, [label]);\n\n  useEffect(() => {\n    const STOP_ON_FIVE = 5;\n    const checkFullList = () => {\n      if (fullList.length > 0) {\n        const mapping = fullList\n          .filter((element, index) => index < STOP_ON_FIVE).map((element) => element);\n        setFirstFive(mapping);\n      }\n    }; checkFullList();\n  }, [fullList]);\n  const renderButtons = firstFive.map(({ strCategory }) => (\n    <button\n      data-testid={ `${strCategory}-category-filter` }\n      className=\"filter-btn\"\n      key={ `${strCategory} - key` }\n      type=\"button\"\n      onClick={ onClickCategory }\n      value={ strCategory }\n    >\n      {strCategory}\n    </button>));\n\n  return (\n    <div>\n      <button\n        data-testid=\"All-category-filter\"\n        className=\"filter-btn\"\n        key=\"All - key\"\n        type=\"button\"\n        onClick={ onClickAll }\n        value=\"\"\n      >\n        All\n      </button>\n      {renderButtons}\n    </div>\n  );\n};\n\nCategoryButtons.propTypes = {\n  label: PropTypes.string.isRequired,\n  onClickAll: PropTypes.func.isRequired,\n  onClickCategory: PropTypes.func.isRequired,\n};\n\nexport default CategoryButtons;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './Drinks.css';\nimport PropTypes from 'prop-types';\nimport Header from '../../components/Header';\nimport Card from '../../components/Card';\nimport { DrinkCtx } from '../../context/ContextDrink';\nimport Footer from '../../components/Footer';\nimport { CategoryButtons } from '../../components/Buttons';\n\nfunction Drinks({ location: { state } }) {\n  const STOP_INDEX = 11;\n  const { drinkApi: { drinks }, setFilterDrink } = useContext(DrinkCtx);\n  const [category, setCategory] = useState('');\n  const [ingredient, setIngredient] = useState('');\n  const history = useHistory();\n  const onClickAll = ({ target }) => {\n    if (state && state.fromExplorerDrinksIngredients) {\n      state.fromExplorerDrinksIngredients = false;\n    }\n    setCategory(target.value);\n    setFilterDrink({ key: 'name', value: category });\n  };\n  const onClickCategory = ({ target }) => {\n    if (category !== target.value) {\n      setCategory(target.value);\n      if (state && state.fromExplorerDrinksIngredients) {\n        state.fromExplorerDrinksIngredients = false;\n      }\n    } else { setCategory(''); }\n  };\n\n  useEffect(() => {\n    if (state !== undefined && state.fromExplorerDrinksIngredients) {\n      setIngredient(state.ingredient);\n      setFilterDrink({ key: 'ing', value: ingredient });\n    } else {\n      setFilterDrink({ key: 'category', value: category });\n    }\n  }, [category, setFilterDrink, state, ingredient]);\n\n  useEffect(() => {\n    const categorySetting = (categoryState) => {\n      if (categoryState === '' && state === undefined) {\n        setFilterDrink({ key: 'name', value: categoryState });\n      }\n    }; categorySetting(category);\n  }, [category, setFilterDrink, state]);\n\n  const render = () => (\n    <div>\n      <Header name=\"Bebidas\" icon=\"true\" currentPage=\"Drinks\" />\n      <CategoryButtons\n        label=\"Drinks\"\n        onClickAll={ onClickAll }\n        onClickCategory={ onClickCategory }\n      />\n      <div className=\"cards ingredient-card\">\n        {drinks && drinks\n          .filter((drink, index) => index <= STOP_INDEX)\n          .map((item, index) => (\n            <Card\n              key={ item.idDrink }\n              id={ item.idDrink }\n              name={ item.strDrink }\n              img={ item.strDrinkThumb }\n              index={ index }\n              onClick={ () => history.push(`/bebidas/${item.idDrink}`) }\n            />\n          ))}\n        {console.log(state)}\n        { (drinks && drinks.length === 1 && category === '')\n          ? history.push(`/bebidas/${drinks[0].idDrink}`)\n          : ''}\n        { drinks === null\n          // eslint-disable-next-line no-alert\n          ? alert('Sinto muito, não encontramos nenhuma receita para esses filtros.')\n          : ''}\n      </div>\n      <div className=\"spacing\" />\n      <Footer />\n    </div>\n  );\n\n  return (render());\n}\n\nDrinks.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string,\n    search: PropTypes.string,\n    hash: PropTypes.string,\n    state: PropTypes.shape({\n      fromExplorerDrinksIngredients: PropTypes.bool,\n      ingredient: PropTypes.string,\n    }),\n    key: PropTypes.string,\n  }),\n};\n\nDrinks.defaultProps = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string,\n    search: PropTypes.string,\n    hash: PropTypes.string,\n    state: PropTypes.string,\n    key: PropTypes.string,\n  }),\n};\n\nexport default Drinks;\n","import { useEffect, useState } from 'react';\nimport { getDrinkFiltredById } from '../../services/api';\n\nfunction useDrinkDetailsHook() {\n  const [id, setId] = useState();\n  const [recipe, setRecipe] = useState({});\n  const [ingredientsAndMeasuresList, setIngredientsAndMeasuresList] = useState([]);\n  const [isDone, setISDone] = useState(false);\n\n  function createIngredientList(receita) {\n    const ING_INDEX = 15;\n    let ingredientList = [];\n    let quantitiesList = [];\n    for (let i = 1; i <= ING_INDEX; i += 1) {\n      ingredientList = [...ingredientList, receita[`strIngredient${i}`]];\n      quantitiesList = [...quantitiesList, receita[`strMeasure${i}`]];\n    }\n    const ingredientAndMeasure = quantitiesList\n      .filter((qua) => qua !== null && qua !== '')\n      .map((mes, index) => `${mes} ${ingredientList[index]}`);\n    return setIngredientsAndMeasuresList(ingredientAndMeasure);\n  }\n\n  useEffect(() => {\n    async function fetchRecipe(idNum) {\n      const currRecipe = await getDrinkFiltredById(idNum);\n      console.log('receita atual', currRecipe);\n      setRecipe(currRecipe);\n      createIngredientList(currRecipe);\n    }\n    fetchRecipe(id);\n  }, [id]);\n\n  useEffect(() => {\n    function checkDoneRecipes() {\n      const localData = localStorage.getItem('doneRecipes');\n      const doneRecipesList = localData ? JSON.parse(localData) : [];\n      console.log('doneRecipes localStorage: ', localData);\n      if (doneRecipesList.length > 0) {\n        return doneRecipesList.find((each) => each.id === id);\n      }\n      return false;\n    }\n    const isItDone = checkDoneRecipes();\n    if (isItDone) {\n      setISDone(true);\n    } else {\n      setISDone(false);\n    }\n  }, [id]);\n\n  const {\n    strDrinkThumb,\n    strDrink,\n    strCategory,\n    strInstructions,\n    strAlcoholic } = recipe;\n\n  return [\n    setId,\n    strDrinkThumb,\n    strDrink,\n    strCategory,\n    strInstructions,\n    strAlcoholic,\n    isDone,\n    ingredientsAndMeasuresList,\n  ];\n}\n\nexport default useDrinkDetailsHook;\n","import { useState, useEffect } from 'react';\n\nconst useFavoritesHook = () => {\n  const [favorites, setFavorites] = useState([]);\n  useEffect(() => {\n    const localData = localStorage.getItem('favoriteRecipes');\n    const newFav = localData ? JSON.parse(localData) : [];\n    setFavorites(newFav);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favorites));\n  }, [favorites]);\n\n  const updateFavorites = (recipe, isFav) => {\n    if (!isFav) {\n      const newFavorites = [...favorites, recipe];\n      console.log('newfavorites: ', newFavorites);\n      setFavorites(newFavorites);\n    } else {\n      const newFavorites = favorites.filter((fav) => fav.id !== recipe.id);\n      setFavorites(newFavorites);\n    }\n  };\n\n  return [favorites, updateFavorites];\n};\n\nexport default useFavoritesHook;\n","import React from 'react';\nimport './Card.css';\nimport PropTypes from 'prop-types';\n\nfunction CarouselCard(props) {\n  const { id, name, img, index } = props;\n  return (\n    <div\n      name={ id }\n      className=\"carousel-card-container\"\n      data-testid={ `${index}-recomendation-card` }\n      hidden={ index > 2 }\n    >\n      <h4 data-testid={ `${index}-recomendation-title` }>{name}</h4>\n      <img src={ img } alt={ name } data-testid={ `${index}-card-img` } />\n    </div>\n  );\n}\n\nCarouselCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default CarouselCard;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport CarouselCard from '../Card/CarouselCard';\nimport shareIcon from '../../images/shareIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport { FoodCtx } from '../../context/ContextFood';\n\nfunction DrinkDetailsInfo({ strCategory,\n  strAlcoholic,\n  handleFavorite,\n  isFavorite,\n  strDrink,\n  strDrinkThumb,\n  handleClick,\n  ingredientsAndMeasuresList,\n  strInstructions,\n  copied,\n}) {\n  const { foodApi: { meals } } = useContext(FoodCtx);\n  const STOP_INDEX = 5;\n  return (\n    <div className=\"recipe-container\">\n      <h2 data-testid=\"recipe-title\">{ strDrink }</h2>\n      <span data-testid=\"recipe-category\">\n        { strCategory }\n        <span>{ strAlcoholic }</span>\n      </span>\n      <div className=\"icons\">\n        <button\n          className=\"share-btn\"\n          type=\"button\"\n          data-testid=\"share-btn\"\n          onClick={ handleClick }\n        >\n          <img src={ shareIcon } alt=\"Compartilhar\" />\n          {copied && 'Link copiado!'}\n        </button>\n        <button\n          className=\"favorite-btn\"\n          type=\"button\"\n          onClick={ handleFavorite }\n        >\n          <img\n            data-testid=\"favorite-btn\"\n            src={ isFavorite ? blackHeartIcon : whiteHeartIcon }\n            alt=\"Compartilhar\"\n          />\n        </button>\n      </div>\n      <img\n        className=\"detail-image\"\n        data-testid=\"recipe-photo\"\n        src={ strDrinkThumb }\n        alt=\"Recipe pic\"\n      />\n      <ul>\n        { ingredientsAndMeasuresList\n          .filter((ingr) => ingr !== '' && ingr !== null)\n          .map(\n            (ing, index) => (\n              <li\n                key={ index }\n                data-testid={ `${index}-ingredient-name-and-measure` }\n              >\n                {ing}\n              </li>),\n          ) }\n      </ul>\n      <p data-testid=\"instructions\">{ strInstructions }</p>\n      {meals && meals\n        .filter((meal, index) => index <= STOP_INDEX)\n        .map((item, index) => (\n          <CarouselCard\n            key={ item.idMeal }\n            id={ item.idMeal }\n            name={ item.strMeal }\n            img={ item.strMealThumb }\n            index={ index }\n          />\n\n        ))}\n    </div>\n  );\n}\n\nDrinkDetailsInfo.propTypes = {\n  copied: PropTypes.bool.isRequired,\n  strCategory: PropTypes.string.isRequired,\n  strAlcoholic: PropTypes.string.isRequired,\n  handleFavorite: PropTypes.func.isRequired,\n  isFavorite: PropTypes.bool.isRequired,\n  strDrink: PropTypes.string.isRequired,\n  strDrinkThumb: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  ingredientsAndMeasuresList: PropTypes.arrayOf(PropTypes.string).isRequired,\n  strInstructions: PropTypes.string.isRequired,\n};\n\nexport default DrinkDetailsInfo;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router';\nimport copy from 'clipboard-copy';\nimport useDrinkDetailsHook from '../hooks/useDrinkDetailsHook';\nimport useFavoritesHook from '../hooks/useFavoritesHook';\nimport DrinkDetailsInfo from '../../components/DrinkDetailsInfo';\n\nconst initialInProgressRecipesValue = { cocktails: {}, meals: {} };\n\nfunction DrinkDetails(props) {\n  const [shouldRedirect, setShouldRedirect] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const { match: { params: { id } } } = props;\n  const [favorites, updateFavorites] = useFavoritesHook();\n  const [inProgressRecipes,\n    setInProgressRecipes] = useState(initialInProgressRecipesValue);\n  const [isInProgress, setIsInProgress] = useState(false);\n\n  const [\n    setId,\n    strDrinkThumb,\n    strDrink,\n    strCategory,\n    strInstructions,\n    strAlcoholic,\n    isDone,\n    ingredientsAndMeasuresList,\n  ] = useDrinkDetailsHook();\n\n  useEffect(() => {\n    fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n  }, []);\n\n  useEffect(() => {\n    setId(id);\n  }, [id, setId]);\n\n  useEffect(() => {\n    const localData = localStorage.getItem('inProgressRecipes');\n    const inProgress = localData ? JSON.parse(localData) : initialInProgressRecipesValue;\n    setInProgressRecipes(inProgress);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n  }, [inProgressRecipes]);\n\n  // effect In Progress => voltar para ca caso de errado\n  const addDrinkInProgress = (recipe) => {\n    const { cocktails } = inProgressRecipes;\n    const newFoodInProgress = {\n      cocktails: Object.assign(cocktails, recipe),\n      meals: inProgressRecipes.meals,\n    };\n    return setInProgressRecipes(newFoodInProgress);\n  };\n\n  useEffect(() => {\n    function checkIsInProgress(idNumber) {\n      const { cocktails } = inProgressRecipes;\n      if (Object.keys(cocktails).includes(idNumber)) {\n        return setIsInProgress(true);\n      }\n      return setIsInProgress(false);\n    }\n    checkIsInProgress(id);\n  });\n\n  useEffect(() => {\n    function checkIsFavorite() {\n      return favorites\n        .find((fav) => fav.id === id)\n        ? setIsFavorite(true)\n        : setIsFavorite(false);\n    }\n    checkIsFavorite();\n  }, [id, favorites]);\n\n  function handleClick() {\n    copy(window.location.href);\n    setCopied(true);\n  }\n\n  function handleFavorite() {\n    const newRecipe = {\n      id,\n      type: 'bebida',\n      area: '',\n      category: strCategory,\n      alcoholicOrNot: strAlcoholic,\n      name: strDrink,\n      image: strDrinkThumb,\n    };\n    updateFavorites(newRecipe, isFavorite);\n    setIsFavorite(!isFavorite);\n  }\n\n  function handleStartRecipeClick() {\n    const newDrinkInProgress = {\n      [id]: ingredientsAndMeasuresList,\n    };\n    addDrinkInProgress(newDrinkInProgress);\n    setShouldRedirect(true);\n  }\n\n  function renderButton() {\n    return (\n      <button\n        className=\"start-btn\"\n        type=\"button\"\n        data-testid=\"start-recipe-btn\"\n        onClick={ handleStartRecipeClick }\n      >\n        { isInProgress ? 'Continuar Receita' : 'Iniciar' }\n      </button>\n    );\n  }\n\n  return (\n    <>\n      { shouldRedirect && <Redirect\n        to={ { pathname: `/bebidas/${id}/in-progress`,\n        } }\n      /> }\n      {strDrink && <DrinkDetailsInfo\n        copied={ copied }\n        strCategory={ strCategory }\n        strAlcoholic={ strAlcoholic }\n        handleFavorite={ handleFavorite }\n        isFavorite={ isFavorite }\n        strDrink={ strDrink }\n        strDrinkThumb={ strDrinkThumb }\n        handleClick={ handleClick }\n        ingredientsAndMeasuresList={ ingredientsAndMeasuresList }\n        strInstructions={ strInstructions }\n\n      />}\n      { isDone ? '' : renderButton() }\n\n    </>\n  );\n}\n\nDrinkDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default DrinkDetails;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport './InProgressCard.css';\n\nconst InProgressCard = (props) => {\n  const { url,\n    id, category, title, img, ingredients, alcohol, instructions } = props;\n  const [isDrinkOrFood, setIsDrinkOrFood] = useState('');\n  const [forMap, setForMap] = useState([]);\n\n  useEffect(() => {\n    setForMap(ingredients.filter((noTwoSpace) => noTwoSpace !== '  ')\n      .map((element) => ({ name: element, checked: false })));\n  }, [ingredients]);\n\n  const onChangeCB = ({ target }) => {\n    const reInsertAtCorrectPos = (array, position, ...elementToInsert) => {\n      array.splice(position, 0, ...elementToInsert);\n    };\n\n    const theIndex = forMap.findIndex((position) => position.name === target.name);\n    const inserting = { name: target.name, checked: target.checked };\n    const theMap = forMap.filter(((filtered) => filtered.name !== target.name));\n\n    reInsertAtCorrectPos(theMap, theIndex, inserting);\n\n    // const newMap = [...oldMap, { name: target.name, checked: target.checked }];\n    // forMap.map((element) => (element.name === target.name ? element.checked = target.checked : element));\n\n    console.log(theMap);\n    localStorage.setItem('test', JSON.stringify(theMap));\n    // localStorage.setItem(JSON.stringify(fromLocalStorage));\n  };\n\n  useEffect(() => {\n    if (url.includes('bebidas')) {\n      setIsDrinkOrFood('Drink');\n    } else { setIsDrinkOrFood('Food'); }\n  }, [url]);\n\n  const ingredientsMapping = ingredients.filter((element) => element !== '  ')\n    .map((ingredient, index) => (\n      <li key={ `${index}-${ingredient}` } data-testid=\"ingredient-step\">\n        <input\n          id={ `id-${index}` }\n          name={ ingredient }\n          type=\"checkbox\"\n          value={ ingredient }\n          onChange={ onChangeCB }\n        />\n        <label htmlFor={ `id-${index}` }>\n          { ingredient }\n        </label>\n      </li>\n    ));\n  //  forMap.map((ingredient, index) => (\n  //    (\n  //      <li key={ `${index}-${ingredient.name}` } data-testid=\"ingredient-step\">\n  //        <input\n  //          id={ `id-${index}` }\n  //          name={ ingredient.name }\n  //          type=\"checkbox\"\n  //          value={ ingredient.name }\n  //          onChange={ onChangeCB }\n  //          checked={ ingredient.checked }\n  //        />\n  //        <label htmlFor={ `id-${index}` }>\n  //          {ingredient.name}\n  //        </label>\n  //      </li>\n  //    )));\n\n  const instructionsMapping = instructions.split(/,|\\. | ;/g).map((string, index) => {\n    if (instructions.split(/,|\\. | ;/g).length !== index + 1) {\n      return (\n        <li key={ `instruction-${index}` }>\n          { `${string.trim().charAt(0).toUpperCase()}${string.trim().slice(1)}` }\n          { ' ' }\n          ;\n        </li>);\n    }\n    return (\n      <li key={ `instruction-${index}` }>\n        { `${string.trim().charAt(0).toUpperCase()}${string.trim().slice(1)}` }\n        { ' ' }\n      </li>);\n  });\n\n  const renderFood = () => (\n    <div\n      name={ id }\n      className=\"card-container\"\n      data-testid=\"recipe-card\"\n    // role=\"button\"\n    >\n      <h4 data-testid=\"recipe-title\">{ title }</h4>\n      <span data-testid=\"recipe-category\">{ `Category => ${category}` }</span>\n      <img src={ img } alt={ title } data-testid=\"recipe-photo\" />\n      <ul className=\"unordered-list\">\n        { ingredientsMapping }\n      </ul>\n      <ol\n        className=\"ol-style\"\n        data-testid=\"instructions\"\n      >\n        { instructionsMapping }\n        Voilá!\n      </ol>\n\n    </div>);\n\n  const renderDrink = () => (\n    <div\n      name={ id }\n      className=\"card-container\"\n      data-testid=\"recipe-card\"\n      role=\"button\"\n    >\n      <h4 data-testid=\"recipe-title\">{ title }</h4>\n      <span data-testid=\"recipe-category\">{ `Category => ${category}` }</span>\n      <span>{ alcohol }</span>\n      <img src={ img } alt={ title } data-testid=\"recipe-photo\" />\n      <ul>\n        { ingredientsMapping }\n      </ul>\n      <ol\n        className=\"ol-style\"\n        data-testid=\"instructions\"\n      >\n        { instructionsMapping }\n        Voilá!\n      </ol>\n    </div>);\n\n  return (\n    <main>\n      { isDrinkOrFood === 'Drink' ? renderDrink() : renderFood() }\n    </main>\n  );\n};\n\nInProgressCard.propTypes = {\n  url: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  ingredients: PropTypes.arrayOf(PropTypes.string).isRequired,\n  alcohol: PropTypes.string,\n  instructions: PropTypes.string.isRequired,\n};\n\nInProgressCard.defaultProps = {\n  alcohol: PropTypes.string,\n};\n\nexport default InProgressCard;\n","import { useEffect, useState } from 'react';\n\nconst useDoneRecipesHook = (foodOrDrink) => {\n  const [doneRecipes, setDoneRecipes] = useState([]);\n  useEffect(() => {\n    const localData = localStorage.getItem('doneRecipes');\n    const parsed = localData ? JSON.parse(localData)\n      : { allDoneRecipes: { doneFoodRecipes: [], doneDrinkRecipes: [] } };\n    setDoneRecipes(parsed);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('doneRecipes', JSON.stringify(doneRecipes));\n  }, [foodOrDrink, doneRecipes]);\n\n  const updateDoneRecipes = (recipe) => {\n    const { allDoneRecipes } = doneRecipes;\n    const hasBeenDone = allDoneRecipes[`done${foodOrDrink}Recipes`]\n      .find((doneRcp) => doneRcp.id === recipe.id);\n    console.log('hasBeenDone: ', hasBeenDone);\n    const newDoneRecipes = [...allDoneRecipes[`done${foodOrDrink}Recipes`], recipe];\n    console.log(newDoneRecipes);\n    setDoneRecipes({\n      allDoneRecipes:\n        { ...allDoneRecipes, [`done${foodOrDrink}Recipes`]: newDoneRecipes },\n    });\n  };\n  return [updateDoneRecipes];\n};\n\nexport default useDoneRecipesHook;\n","import copy from 'clipboard-copy';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport InProgressCard from '../../components/Card/InProgressCard';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport shareIcon from '../../images/shareIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport { getDrinkFiltredById } from '../../services/api';\nimport useDoneRecipesHook from '../hooks/useDoneRecipesHook';\nimport useFavoritesHook from '../hooks/useFavoritesHook';\n\nfunction DrinkInProgress(props) {\n  const { match: { url, params: { id } } } = props;\n  const history = useHistory();\n  const [favorites, updateFavorites] = useFavoritesHook();\n  const [setDoneRecipes] = useDoneRecipesHook('Drink');\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [filteredById, setFilteredById] = useState('');\n  const [ingredientsAndMeasuresList, setIngredientsAndMeasuresList] = useState([]);\n  const isEmpty = (obj) => Object.keys(obj).length === 0; // verifica se o objeto está vazio;\n\n  const { strCategory,\n    strDrink, strDrinkThumb, strAlcoholic, strInstructions } = filteredById;\n\n  const copyFunction = () => {\n    copy(window.location.href.replace('/in-progress', ''));\n    setCopied(!copied);\n  };\n\n  function handleDone() {\n    const newRecipe = {\n      id,\n      type: 'bebida',\n      area: '',\n      category: strCategory,\n      alcoholicOrNot: strAlcoholic,\n      name: strDrink,\n      image: strDrinkThumb,\n    };\n    setDoneRecipes(newRecipe);\n    history.push('/receitas-feitas');\n  }\n\n  function handleFavorite() {\n    const newRecipe = {\n      id,\n      type: 'bebida',\n      area: '',\n      category: strCategory,\n      alcoholicOrNot: strAlcoholic,\n      name: strDrink,\n      image: strDrinkThumb,\n    };\n    updateFavorites(newRecipe, isFavorite);\n    setIsFavorite(!isFavorite);\n  }\n\n  useEffect(() => {\n    function checkIsFavorite() {\n      return favorites\n        .find((fav) => fav.id === id)\n        ? setIsFavorite(true)\n        : setIsFavorite(false);\n    }\n    checkIsFavorite();\n  }, [id, favorites]);\n\n  const buttonsDiv = (\n    <div className=\"icons\">\n      <button type=\"button\" data-testid=\"share-btn\" onClick={ copyFunction }>\n        <img src={ shareIcon } alt=\"Compartilhar\" />\n        { copied && 'Link copiado!' }\n      </button>\n      <button\n        type=\"button\"\n        onClick={ handleFavorite }\n      >\n        <img\n          data-testid=\"favorite-btn\"\n          src={ isFavorite ? blackHeartIcon : whiteHeartIcon }\n          alt=\"Compartilhar\"\n        />\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"finish-recipe-btn\"\n        onClick={ handleDone }\n      >\n        Finalizar\n      </button>\n    </div>\n  );\n\n  const createIngredientList = (receita) => {\n    const ING_INDEX = 15;\n    let ingredientList = [];\n    let quantitiesList = [];\n    for (let i = 1; i <= ING_INDEX; i += 1) {\n      ingredientList = [...ingredientList, receita[`strIngredient${i}`]];\n      quantitiesList = [...quantitiesList, receita[`strMeasure${i}`]];\n    }\n    const ingredientAndMeasure = quantitiesList\n      .filter((qua) => qua !== null && qua !== '')\n      .map((mes, index) => `${mes} ${ingredientList[index]}`);\n    return setIngredientsAndMeasuresList(ingredientAndMeasure);\n  };\n\n  useEffect(() => {\n    const requestingAPI = async () => {\n      const fetchById = await getDrinkFiltredById(id);\n      setFilteredById(fetchById);\n    }; requestingAPI();\n  }, [id]);\n\n  useEffect(() => {\n    if (!isEmpty(filteredById)) {\n      createIngredientList(filteredById);\n    }\n  }, [filteredById]);\n\n  return (\n    <main>\n      { !isEmpty(filteredById)\n        ? (\n          <section style={ {\n            display: 'flex',\n            flexFlow: 'column wrap'\n          } }>\n            { buttonsDiv }\n            <InProgressCard\n              url={ url }\n              id={ id }\n              category={ strCategory }\n              title={ strDrink }\n              img={ strDrinkThumb }\n              ingredients={ ingredientsAndMeasuresList }\n              alcohol={ strAlcoholic }\n              instructions={ strInstructions }\n            />\n          </section>)\n        : <h1>Carregando bebida...</h1> }\n    </main>\n  );\n}\n\nDrinkInProgress.propTypes = {\n  match: PropTypes.shape({\n    url: PropTypes.string,\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default DrinkInProgress;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\n\nfunction Explorer() {\n  const history = useHistory();\n  const renderExplorerButtons = (foodOrDrink, dataTestId) => (\n    <button\n      data-testid={ `explore-${dataTestId}` }\n      style={ { padding: '5px', margin: '5px' } }\n      type=\"button\"\n      onClick={ () => history.push(`explorar/${foodOrDrink}`) }\n    >\n      Explorar\n      {' '}\n      {foodOrDrink.charAt(0).toUpperCase() + foodOrDrink.slice(1)}\n    </button>);\n  return (\n    <div>\n      <Header name=\"Explorar\" icon=\"false\" currentPage=\"Foods\" />\n      {renderExplorerButtons('comidas', 'food')}\n      <br />\n      {renderExplorerButtons('bebidas', 'drinks')}\n      <Footer />\n    </div>\n  );\n}\n\nexport default Explorer;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ExploreByWhat } from '../../components/Buttons';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\nimport { getRandomRecipe } from '../../services/api';\n\nfunction ExplorerDrink() {\n  const [randomRecipeNumber, setRandomRecipeNumber] = useState('');\n  const history = useHistory();\n  const onClickSurprise = () => history.push(`/bebidas/${randomRecipeNumber}`);\n\n  useEffect(() => {\n    async function setTheRandom() {\n      const setting = await getRandomRecipe('random', 'Drinks');\n      setRandomRecipeNumber(setting.drinks[0].idDrink);\n    } setTheRandom();\n  }, []);\n\n  return (\n    <div>\n      <Header name=\"Explorar Bebidas\" currentPage=\"Drinks\" icon=\"false\" />\n      <ExploreByWhat\n        dataTestId=\"ingredient\"\n        ptBr=\"Ingredientes\"\n        onClick={ () => history.push('/explorar/bebidas/ingredientes') }\n      />\n      <ExploreByWhat\n        dataTestId=\"surprise\"\n        ptBr=\"Me Surpreenda!\"\n        onClick={ onClickSurprise }\n      />\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExplorerDrink;\n","import React from 'react';\nimport './IngredientCard.css';\nimport PropTypes from 'prop-types';\n\nfunction IngredientCard(props) {\n  const { id, name, img, index, onClick } = props;\n  return (\n    <div\n      name={ id }\n      className=\"ingredient-card-container\"\n      data-testid={ `${index}-ingredient-card` }\n      onClick={ onClick }\n      role=\"button\"\n      tabIndex={ index }\n      onKeyDown={ () => console.log('Cara, como esse linter é chato, Ave Maria') }\n    >\n      <h4 data-testid={ `${index}-card-name` }>{name}</h4>\n      <img src={ img } alt={ name } data-testid={ `${index}-card-img` } />\n    </div>\n  );\n}\n\nIngredientCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default IngredientCard;\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\nimport IngredientCard from '../../components/Card/IngredientCard';\nimport { showCompleteLists } from '../../services/api';\n\nfunction ExplorerDrinksIngredients() {\n  const STOP_INDEX = 11;\n  const [ingredientsList, setIngredientsList] = useState([]);\n  const [redirectToDrinks, setRedirectToDrinks] = useState('');\n\n  useEffect(() => {\n    async function requestNSet() {\n      const requestList = await showCompleteLists('ingredients', 'Drinks');\n      setIngredientsList(requestList.drinks);\n    } requestNSet();\n  }, []);\n\n  return (\n    <div>\n      <Header name=\"Explorar Ingredientes\" icon=\"false\" currentPage=\"Drinks\" />\n      <div className=\"ingredient-card-complete-container\">\n        {ingredientsList && ingredientsList\n          .filter((ingredient, index) => index <= STOP_INDEX)\n          .map((item, index) => (\n            <IngredientCard\n              key={ index }\n              id={ item.strIngredient1 }\n              name={ item.strIngredient1 }\n              img={ `https://www.thecocktaildb.com/images/ingredients/${item.strIngredient1}-Small.png` }\n              index={ index }\n              onClick={ () => setRedirectToDrinks({\n                pathname: '/bebidas',\n                state: { fromExplorerDrinksIngredients: true,\n                  ingredient: item.strIngredient1 },\n              }) }\n            />\n          ))}\n      </div>\n      {redirectToDrinks !== '' ? <Redirect to={ redirectToDrinks } /> : ''}\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExplorerDrinksIngredients;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ExploreByWhat } from '../../components/Buttons';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\nimport { getRandomRecipe } from '../../services/api';\n\nfunction ExplorerFood() {\n  const [randomRecipeNumber, setRandomRecipeNumber] = useState('');\n  const history = useHistory();\n  const onClickSurprise = () => history.push(`/comidas/${randomRecipeNumber}`);\n\n  useEffect(() => {\n    async function setTheRandom() {\n      const setting = await getRandomRecipe('random', 'Foods');\n      setRandomRecipeNumber(setting.meals[0].idMeal);\n    } setTheRandom();\n  }, []);\n\n  return (\n    <div>\n      <Header name=\"Explorar Comidas\" currentPage=\"Foods\" icon=\"false\" />\n      <ExploreByWhat\n        dataTestId=\"area\"\n        ptBr=\"Local de Origem\"\n        onClick={ () => history.push('/explorar/comidas/area') }\n      />\n      <ExploreByWhat\n        dataTestId=\"ingredient\"\n        ptBr=\"Ingredientes\"\n        onClick={ () => history.push('/explorar/comidas/ingredientes') }\n      />\n      <ExploreByWhat\n        dataTestId=\"surprise\"\n        ptBr=\"Me Surpreenda!\"\n        onClick={ onClickSurprise }\n      />\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExplorerFood;\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\nimport { showCompleteLists } from '../../services/api';\nimport IngredientCard from '../../components/Card/IngredientCard';\nimport './ExplorerIngredients.css';\n\nfunction ExplorerFoodsIngredients() {\n  const STOP_INDEX = 11;\n  const [ingredientsList, setIngredientsList] = useState([]);\n  const [redirectToFoods, setRedirectToFoods] = useState('');\n\n  useEffect(() => {\n    async function requestNSet() {\n      const requestList = await showCompleteLists('ingredients', 'Foods');\n      setIngredientsList(requestList.meals);\n    } requestNSet();\n  }, []);\n\n  return (\n    <div>\n      <Header name=\"Explorar Ingredientes\" icon=\"false\" currentPage=\"Foods\" />\n      <div className=\"ingredient-card-complete-container\">\n        {ingredientsList && ingredientsList\n          .filter((ingredient, index) => index <= STOP_INDEX)\n          .map((item, index) => (\n            <IngredientCard\n              key={ item.idIngredient }\n              id={ item.idIngredient }\n              name={ item.strIngredient }\n              img={ `https://www.themealdb.com/images/ingredients/${item.strIngredient}-Small.png` }\n              index={ index }\n              onClick={ () => setRedirectToFoods({\n                pathname: '/comidas',\n                state: { fromExplorerFoodsIngredients: true,\n                  ingredient: item.strIngredient },\n              }) }\n            />\n          ))}\n      </div>\n      <Footer />\n      {redirectToFoods !== '' ? <Redirect to={ redirectToFoods } /> : ''}\n    </div>\n  );\n}\n\nexport default ExplorerFoodsIngredients;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Card from '../../components/Card';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\nimport { showCompleteLists, filterArea } from '../../services/api';\n\nfunction ExplorerFoodsRegion() {\n  const STOP_INDEX = 11;\n  const history = useHistory();\n  const [areaList, setAreaList] = useState([]);\n  const [selectedArea, setSelectedArea] = useState('American');\n  const [mealList, setMealList] = useState([]);\n  useEffect(() => {\n    async function setTheList() {\n      const requestAreaList = await showCompleteLists('area', 'Foods');\n      setAreaList(requestAreaList.meals);\n    } setTheList();\n  }, []);\n\n  useEffect(() => {\n    async function setTheMealList() {\n      const requestMealList = await filterArea(selectedArea, 'Foods');\n      setMealList(requestMealList.meals);\n    } setTheMealList();\n  }, [selectedArea]);\n\n  const handleChange = ({ target }) => { setSelectedArea(target.value); };\n  const areaOptions = areaList.map(({ strArea }) => (\n\n    <option\n      key={ strArea }\n      data-testid={ `${strArea}-option` }\n      value={ strArea }\n    >\n      {strArea}\n    </option>));\n  return (\n    <div>\n      <Header name=\"Explorar Origem\" icon=\"true\" currentPage=\"Foods\" />\n      <label htmlFor=\"dropdown\">\n        Origem:\n        <select\n          id=\"dropdown\"\n          onChange={ handleChange }\n          data-testid=\"explore-by-area-dropdown\"\n        >\n          <option\n            key=\"All\"\n            data-testid=\"All-option\"\n            value=\"All\"\n          >\n            All\n          </option>\n          {areaOptions}\n        </select>\n      </label>\n      {mealList && mealList.filter((meal, index) => index <= STOP_INDEX)\n        .map((item, index) => (\n          <Card\n            key={ item.idMeal }\n            id={ item.idMeal }\n            name={ item.strMeal }\n            img={ item.strMealThumb }\n            index={ index }\n            onClick={ () => history.push(`/comidas/${item.idMeal}`) }\n          />\n        ))}\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExplorerFoodsRegion;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './Foods.css';\nimport PropTypes from 'prop-types';\nimport Card from '../../components/Card';\nimport Header from '../../components/Header';\nimport { FoodCtx } from '../../context/ContextFood';\nimport Footer from '../../components/Footer';\nimport { CategoryButtons } from '../../components/Buttons';\n\nfunction Foods({ location: { state = false } }) {\n  const STOP_INDEX = 11;\n  const { foodApi: { meals }, setFilterFood } = useContext(FoodCtx);\n  const [category, setCategory] = useState('');\n  const [ingredient, setIngredient] = useState('');\n  const history = useHistory();\n  const onClickAll = ({ target }) => {\n    if (state && state.fromExplorerFoodsIngredients) {\n      state.fromExplorerFoodsIngredients = false;\n    }\n    setCategory(target.value);\n    setFilterFood({ key: 'name', value: category });\n  };\n  const onClickCategory = ({ target }) => {\n    if (category !== target.value) {\n      setCategory(target.value);\n      if (state && state.fromExplorerFoodsIngredients) {\n        state.fromExplorerFoodsIngredients = false;\n      }\n    } else { setCategory(''); }\n  };\n\n  useEffect(() => {\n    if (state !== undefined && state.fromExplorerFoodsIngredients) {\n      setIngredient(state.ingredient);\n      setFilterFood({ key: 'ing', value: ingredient });\n    } else {\n      setFilterFood({ key: 'category', value: category });\n    }\n  }, [category, setFilterFood, state, ingredient]);\n\n  useEffect(() => {\n    const categorySetting = (categoryState) => {\n      if (categoryState === '') {\n        setFilterFood({ key: 'name', value: categoryState });\n      }\n    }; categorySetting(category);\n  }, [category, setFilterFood]);\n\n  const render = () => (\n    <div>\n      <Header name=\"Comidas\" icon=\"true\" currentPage=\"Foods\" />\n      <CategoryButtons\n        label=\"Foods\"\n        onClickAll={ onClickAll }\n        onClickCategory={ onClickCategory }\n      />\n      <div className=\"cards\">\n        {meals && meals\n          .filter((meal, index) => index <= STOP_INDEX)\n          .map((item, index) => (\n            <Card\n              key={ item.idMeal }\n              id={ item.idMeal }\n              name={ item.strMeal }\n              img={ item.strMealThumb }\n              index={ index }\n              onClick={ () => history.push(`/comidas/${item.idMeal}`) }\n            />\n          ))}\n\n        { (meals && meals.length === 1 && category === '')\n          ? history.push(`/comidas/${meals[0].idMeal}`)\n          : '' }\n        { meals === null\n        // eslint-disable-next-line no-alert\n          ? alert('Sinto muito, não encontramos nenhuma receita para esses filtros.')\n          : ''}\n      </div>\n      <div className=\"spacing\" />\n      <Footer />\n    </div>\n  );\n\n  return (render());\n}\n\nFoods.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string,\n    search: PropTypes.string,\n    hash: PropTypes.string,\n    state: PropTypes.shape({\n      fromExplorerFoodsIngredients: PropTypes.bool,\n      ingredient: PropTypes.string,\n    }),\n    key: PropTypes.string,\n  }),\n};\n\nFoods.defaultProps = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string,\n    search: PropTypes.string,\n    hash: PropTypes.string,\n    state: PropTypes.string,\n    key: PropTypes.string,\n  }),\n};\n\nexport default Foods;\n","import { useEffect, useState } from 'react';\n\nfunction useFoodDetailsHook() {\n  const [id, setId] = useState();\n  const [recipe, setRecipe] = useState({});\n  const [ingredientsAndMeasuresList, setIngredientsAndMeasuresList] = useState([]);\n  const [isDone, setISDone] = useState(false);\n\n  function createIngredientList(receita) {\n    const ING_INDEX = 20;\n    let ingredientList = [];\n    let quantitiesList = [];\n    for (let i = 1; i <= ING_INDEX; i += 1) {\n      ingredientList = [...ingredientList, receita[`strIngredient${i}`]];\n      quantitiesList = [...quantitiesList, receita[`strMeasure${i}`]];\n    }\n    const ingredientAndMeasure = quantitiesList\n      .filter((qua) => qua && qua !== ' ' && qua !== null)\n      .map((mes, index) => `${mes} ${ingredientList[index]}`);\n    console.log('lista de ing: ', ingredientAndMeasure);\n    return setIngredientsAndMeasuresList(ingredientAndMeasure);\n  }\n\n  useEffect(() => {\n    async function fetchRecipe(idNum) {\n      const result = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${idNum}`)\n        .then((res) => res.json())\n        .then((data) => data);\n      const { meals } = result;\n      const currRecipe = meals[0];\n      setRecipe(currRecipe);\n      createIngredientList(currRecipe);\n    }\n    fetchRecipe(id);\n  }, [id]);\n\n  useEffect(() => {\n    function checkDoneRecipes() {\n      const localData = localStorage.getItem('doneRecipes');\n      const doneRecipesList = localData ? JSON.parse(localData) : [];\n      console.log('doneRecipes localStorage: ', localData);\n      if (doneRecipesList.length > 0) {\n        return doneRecipesList.find((each) => each.id === id);\n      }\n      return false;\n    }\n    const isItDone = checkDoneRecipes();\n    if (isItDone) {\n      setISDone(true);\n    } else {\n      setISDone(false);\n    }\n  }, [id]);\n\n  const {\n    strMealThumb,\n    strMeal,\n    strCategory,\n    strInstructions,\n    strYoutube,\n    strArea,\n  } = recipe;\n\n  return [\n    setId,\n    strMealThumb,\n    strMeal,\n    strCategory,\n    strInstructions,\n    strYoutube,\n    strArea,\n    isDone,\n    ingredientsAndMeasuresList,\n  ];\n}\n\nexport default useFoodDetailsHook;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport shareIcon from '../../images/shareIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport CarouselCard from '../Card/CarouselCard';\nimport { DrinkCtx } from '../../context/ContextDrink';\n\nfunction FoodDetailsInfo({\n  copied,\n  strMeal,\n  strCategory,\n  handleClick,\n  handleFavorite,\n  isFavorite,\n  strMealThumb,\n  strYoutube,\n  strInstructions,\n  ingredientsAndMeasuresList }) {\n  const { drinkApi: { drinks } } = useContext(DrinkCtx);\n  const STOP_INDEX = 5;\n\n  return (\n    <>\n      <div className=\"recipe-container\">\n        <h2 data-testid=\"recipe-title\">{ strMeal }</h2>\n        <span data-testid=\"recipe-category\">{ strCategory }</span>\n        <div className=\"icons\">\n          <button\n            className=\"share-btn\"\n            type=\"button\"\n            data-testid=\"share-btn\"\n            onClick={ handleClick }\n          >\n            <img src={ shareIcon } alt=\"Compartilhar\" />\n            {copied && 'Link copiado!'}\n          </button>\n          <button\n            type=\"button\"\n            className=\"favorite-btn\"\n            onClick={ handleFavorite }\n          >\n            <img\n              data-testid=\"favorite-btn\"\n              src={ isFavorite ? blackHeartIcon : whiteHeartIcon }\n              alt=\"Compartilhar\"\n            />\n          </button>\n        </div>\n        <img\n          className=\"detail-image\"\n          data-testid=\"recipe-photo\"\n          src={ strMealThumb }\n          alt=\"Recipe pic\"\n        />\n        <div>\n          <iframe\n            data-testid=\"video\"\n            width=\"280\"\n            height=\"157\"\n            src={ strYoutube }\n            title=\"YouTube video player\"\n            frameBorder=\"0\"\n            allow=\"accelerometer;\n              autoplay; clipboard-write;\n              encrypted-media;\n              gyroscope; picture-in-picture\"\n            allowFullScreen\n          />\n        </div>\n        <ul>\n          { ingredientsAndMeasuresList\n            .filter((ingr) => ingr !== '' && ingr !== null)\n            .map(\n              (ing, index) => (\n                <li\n                  key={ index }\n                  data-testid={ `${index}-ingredient-name-and-measure` }\n                >\n                  {ing}\n                </li>),\n            ) }\n        </ul>\n        <p data-testid=\"instructions\">{ strInstructions }</p>\n      </div>\n      <div className=\"carousel-wraper\">\n        <div className=\"carousel\">\n          {drinks && drinks\n            .filter((drink, index) => index <= STOP_INDEX)\n            .map((item, index) => (\n              <CarouselCard\n                key={ item.idDrink }\n                id={ item.idDrink }\n                name={ item.strDrink }\n                img={ item.strDrinkThumb }\n                index={ index }\n              />\n            ))}\n        </div>\n      </div>\n    </>\n  );\n}\n\nFoodDetailsInfo.propTypes = {\n  copied: PropTypes.bool.isRequired,\n  strMeal: PropTypes.string.isRequired,\n  strCategory: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  handleFavorite: PropTypes.func.isRequired,\n  isFavorite: PropTypes.bool.isRequired,\n  strMealThumb: PropTypes.string.isRequired,\n  strYoutube: PropTypes.string.isRequired,\n  strInstructions: PropTypes.string.isRequired,\n  ingredientsAndMeasuresList: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default FoodDetailsInfo;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router';\nimport copy from 'clipboard-copy';\nimport useFoodDetailsHook from '../hooks/useFoodDetailsHook';\n\nimport './FoodDetail.css';\n\nimport useFavoritesHook from '../hooks/useFavoritesHook';\nimport FoodDetailsInfo from '../../components/FoodDetailsInfo';\n\nconst initialInProgressRecipesValue = { cocktails: {}, meals: {} };\n\nfunction FoodDetails(props) {\n  const [shouldRedirect, setShouldRedirect] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const { match: { params: { id } } } = props;\n  const [favorites, updateFavorites] = useFavoritesHook();\n  const [inProgressRecipes,\n    setInProgressRecipes] = useState(initialInProgressRecipesValue);\n  const [isInProgress, setIsInProgress] = useState(false);\n  const [\n    setId,\n    strMealThumb,\n    strMeal,\n    strCategory,\n    strInstructions,\n    strYoutube,\n    strArea,\n    isDone,\n    ingredientsAndMeasuresList,\n  ] = useFoodDetailsHook();\n\n  useEffect(() => {\n    setId(id);\n  }, [id, setId]);\n\n  useEffect(() => {\n    const localData = localStorage.getItem('inProgressRecipes');\n    const inProgress = localData ? JSON.parse(localData) : initialInProgressRecipesValue;\n    setInProgressRecipes(inProgress);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n  }, [inProgressRecipes]);\n\n  useEffect(() => {\n    function checkIsInProgress(idNumber) {\n      const { meals } = inProgressRecipes;\n      if (Object.keys(meals).includes(idNumber)) {\n        return setIsInProgress(true);\n      }\n      return setIsInProgress(false);\n    }\n    checkIsInProgress(id);\n  });\n\n  const addFoodInProgress = (recipe) => {\n    const { meals, cocktails } = inProgressRecipes;\n    const newFoodInProgress = {\n      cocktails,\n      meals: Object.assign(meals, recipe),\n    };\n    return setInProgressRecipes(newFoodInProgress);\n  };\n\n  useEffect(() => {\n    function checkIsFavorite() {\n      return favorites\n        .find((fav) => fav.id === id)\n        ? setIsFavorite(true)\n        : setIsFavorite(false);\n    }\n    checkIsFavorite();\n  }, [id, favorites]);\n\n  function handleClick() {\n    copy(window.location.href);\n    setCopied(true);\n  }\n\n  function handleFavorite() {\n    const newRecipe = {\n      id,\n      type: 'comida',\n      area: strArea,\n      category: strCategory,\n      alcoholicOrNot: '',\n      name: strMeal,\n      image: strMealThumb,\n    };\n    updateFavorites(newRecipe, isFavorite);\n    setIsFavorite(!isFavorite);\n  }\n\n  function handleStartRecipeClick() {\n    const newFoodInProgress = {\n      [id]: ingredientsAndMeasuresList,\n    };\n    addFoodInProgress(newFoodInProgress);\n    setShouldRedirect(true);\n  }\n\n  function renderButton() {\n    return (\n      <button\n        className=\"start-btn\"\n        type=\"button\"\n        data-testid=\"start-recipe-btn\"\n        onClick={ handleStartRecipeClick }\n      >\n        { isInProgress ? 'Continuar Receita' : 'Iniciar' }\n      </button>\n    );\n  }\n\n  return (\n    <>\n      { shouldRedirect && <Redirect to={ `/comidas/${id}/in-progress` } /> }\n      {strMeal && <FoodDetailsInfo\n        copied={ copied }\n        strMeal={ strMeal }\n        strCategory={ strCategory }\n        handleClick={ handleClick }\n        handleFavorite={ handleFavorite }\n        isFavorite={ isFavorite }\n        strMealThumb={ strMealThumb }\n        strYoutube={ strYoutube }\n        strInstructions={ strInstructions }\n        ingredientsAndMeasuresList={ ingredientsAndMeasuresList }\n      />}\n      { isDone ? '' : renderButton() }\n    </>\n  );\n}\n\nFoodDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default FoodDetails;\n","import copy from 'clipboard-copy';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport InProgressCard from '../../components/Card/InProgressCard';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport shareIcon from '../../images/shareIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport { getFoodFiltredById } from '../../services/api';\nimport useDoneRecipesHook from '../hooks/useDoneRecipesHook';\nimport useFavoritesHook from '../hooks/useFavoritesHook';\n\nfunction FoodInProgress(props) {\n  const { match: { url, params: { id } } } = props;\n  const [filteredById, setFilteredById] = useState('');\n  const [setDoneRecipes] = useDoneRecipesHook('Food');\n  const history = useHistory();\n  const [favorites, updateFavorites] = useFavoritesHook();\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [ingredientsAndMeasuresList, setIngredientsAndMeasuresList] = useState([]);\n  const isEmpty = (obj) => Object.keys(obj).length === 0; // verifica se o objeto está vazio;\n\n  const { strCategory,\n    strMeal, strMealThumb, strInstructions, strArea } = filteredById;\n\n  const copyFunction = () => {\n    copy(window.location.href.replace('/in-progress', ''));\n    setCopied(!copied);\n  };\n\n  function handleDone() {\n    const newDone = {\n      id,\n      type: 'comida',\n      area: strArea,\n      category: strCategory,\n      alcoholicOrNot: '',\n      name: strMeal,\n      image: strMealThumb,\n    };\n    setDoneRecipes(newDone);\n    history.push('/receitas-feitas');\n  }\n\n  function handleFavorite() {\n    const newRecipe = {\n      id,\n      type: 'comida',\n      area: strArea,\n      category: strCategory,\n      alcoholicOrNot: '',\n      name: strMeal,\n      image: strMealThumb,\n    };\n    updateFavorites(newRecipe, isFavorite);\n    setIsFavorite(!isFavorite);\n  }\n\n  useEffect(() => {\n    function checkIsFavorite() {\n      return favorites\n        .find((fav) => fav.id === id)\n        ? setIsFavorite(true)\n        : setIsFavorite(false);\n    }\n    checkIsFavorite();\n  }, [id, favorites]);\n\n  const buttonsDiv = (\n    <div className=\"icons\">\n      <button type=\"button\" data-testid=\"share-btn\" onClick={ copyFunction }>\n        <img src={ shareIcon } alt=\"Compartilhar\" />\n        { copied && 'Link copiado!' }\n      </button>\n      <button\n        type=\"button\"\n        onClick={ handleFavorite }\n      >\n        <img\n          data-testid=\"favorite-btn\"\n          src={ isFavorite ? blackHeartIcon : whiteHeartIcon }\n          alt=\"Compartilhar\"\n        />\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"finish-recipe-btn\"\n        onClick={ handleDone }\n      >\n        Finalizar\n      </button>\n    </div>\n  );\n\n  function createIngredientList(receita) {\n    const ING_INDEX = 15;\n    let ingredientList = [];\n    let quantitiesList = [];\n    for (let i = 1; i <= ING_INDEX; i += 1) {\n      ingredientList = [...ingredientList, receita[`strIngredient${i}`]];\n      quantitiesList = [...quantitiesList, receita[`strMeasure${i}`]];\n    }\n    const ingredientAndMeasure = quantitiesList\n      .filter((qua) => qua !== null && qua !== '')\n      .map((mes, index) => `${mes} ${ingredientList[index]}`);\n    return setIngredientsAndMeasuresList(ingredientAndMeasure);\n  }\n\n  useEffect(() => {\n    const requestingAPI = async () => {\n      const fetchById = await getFoodFiltredById(id);\n      setFilteredById(fetchById);\n    }; requestingAPI();\n  }, [id]);\n\n  useEffect(() => {\n    if (!isEmpty(filteredById)) {\n      console.log('IS NOT EMPTY');\n      createIngredientList(filteredById);\n    }\n  }, [filteredById]);\n\n  return (\n    <div>\n      { !isEmpty(filteredById)\n        ? (\n          <section style={ {\n            display: 'flex',\n            flexFlow: 'column wrap'\n          } }>\n            { buttonsDiv }\n            <InProgressCard\n              url={ url }\n              id={ id }\n              category={ strCategory }\n              title={ strMeal }\n              img={ strMealThumb }\n              ingredients={ ingredientsAndMeasuresList }\n              // alcohol={ strAlcoholic }\n              instructions={ strInstructions }\n            />\n          </section>) : <h1>Carregando comida...</h1> }\n    </div>\n  );\n}\n\nFoodInProgress.propTypes = {\n  match: PropTypes.shape({\n    url: PropTypes.string,\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default FoodInProgress;\n","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './Login.css';\n\nconst loginImg = 'https://firebasestorage.googleapis.com/v0/b/imagenator-ccdab.appspot.com/o/loginImg.png?alt=media&token=ad2a1328-9964-42eb-86a8-514c0e3811f5';\n\nfunction Login() {\n  const [user, setUser] = useState({ email: '', password: '' });\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [redirect, setRedirect] = useState(false);\n\n  useEffect(() => {\n    const minimumNameSize = 6;\n    const { email, password } = user;\n    const re = /.+@[A-z]+[.]com/;\n    const isValidEmail = re.test(email);\n    const isValidPassword = password.length > minimumNameSize;\n    if (isValidEmail && isValidPassword) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    }\n  }, [user]);\n\n  const handleChange = ({ target }) => {\n    setUser({ ...user, [target.name]: target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    localStorage.setItem('user', JSON.stringify({ email: user.email }));\n    localStorage.setItem('mealsToken', '1');\n    localStorage.setItem('cocktailsToken', '1');\n    setRedirect(true);\n  };\n\n  return (\n    <>\n      { redirect && <Redirect to=\"/comidas\" /> }\n      <div className=\"login-container\">\n        <div className=\"login-img-container\">\n          <img className=\"login-img-logo\" src={ loginImg } alt=\"logo\" />\n          <div className=\"center-items-div\">\n            <span>\n              TastyFood´s\n            </span>\n          </div>\n        </div>\n        <form onSubmit={ onSubmit } className=\"form-box\">\n          <label htmlFor=\"email\" className=\"input-label\">\n            Digite seu email:\n            <input\n              className=\"login-input\"\n              id=\"email\"\n              name=\"email\"\n              value={ user.email }\n              placeholder=\"email@email.com\"\n              type=\"email\"\n              data-testid=\"email-input\"\n              onChange={ handleChange }\n              required\n            />\n          </label>\n          <label htmlFor=\"password\" className=\"input-label\">\n            Digite sua Senha:\n            <input\n              className=\"login-input\"\n              id=\"password\"\n              name=\"password\"\n              value={ user.password }\n              placeholder=\"Password\"\n              type=\"password\"\n              data-testid=\"password-input\"\n              onChange={ handleChange }\n              autoComplete=\"off\"\n              required\n            />\n          </label>\n          <button\n            className=\"input-login-button\"\n            data-testid=\"login-submit-btn\"\n            type=\"submit\"\n            disabled={ isDisabled }\n          >\n            Entrar\n          </button>\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst NotFound = () => {\n  const history = useHistory();\n\n  return (\n    <div\n      style={\n        { alignItems: 'center',\n          display: 'flex',\n          flexFlow: 'column wrap',\n          justifyContent: 'center',\n          textAlign: 'center' }\n      }\n    >\n      <h1>Not Found</h1>\n      <img\n        src=\"https://image.freepik.com/free-vector/404-error-page-found_41910-364.jpg\"\n        alt=\"not found\"\n      />\n      <button\n        style={\n          { boxSizing:\n         'content-box',\n          marginTop: '10px',\n          padding: '10px',\n          textAlign: 'center' }\n        }\n        type=\"button\"\n        onClick={ () => history.push('/perfil') }\n      >\n        Clique aqui para retornar à página do perfil\n      </button>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\n\nfunction Profile() {\n  const history = useHistory();\n\n  function handleExit() {\n    localStorage.clear();\n    history.push('/');\n  }\n  const { email } = JSON.parse(localStorage.getItem('user')) || '';\n  return (\n    <div>\n      <Header name=\"Perfil\" icon=\"false\" currentPage=\"Profile\" />\n      <p>\n        Usuário:\n        <span data-testid=\"profile-email\">{email}</span>\n      </p>\n      <Link to=\"/receitas-feitas\">\n        <button type=\"button\" data-testid=\"profile-done-btn\">\n          Receitas Feitas\n        </button>\n      </Link>\n      <Link to=\"/receitas-favoritas\">\n        <button type=\"button\" data-testid=\"profile-favorite-btn\">\n          Receitas Favoritas\n        </button>\n      </Link>\n      <button\n        type=\"button\"\n        data-testid=\"profile-logout-btn\"\n        onClick={ handleExit }\n      >\n        Sair\n      </button>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Profile;\n","import copy from 'clipboard-copy';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../../components/Header';\nimport shareIcon from '../../images/shareIcon.svg';\nimport './DoneRecipes.css';\n\nfunction DoneRecipes() {\n  const [doneRecipesList, setDoneRecipesList] = useState([]);\n  const [copied, setCopied] = useState(false);\n  const [filteredDoneRecipes, setFilteredDoneRecipes] = useState([]);\n\n  useEffect(() => {\n    function checkDoneRecipes() {\n      const localData = localStorage.getItem('doneRecipes');\n      const doneRecipes = localData ? JSON.parse(localData).allDoneRecipes : [];\n      const arrayEveryThing = doneRecipes.doneFoodRecipes\n        .concat(doneRecipes.doneDrinkRecipes);\n      console.log(arrayEveryThing);\n      setDoneRecipesList(arrayEveryThing);\n      setFilteredDoneRecipes(arrayEveryThing);\n    }\n    checkDoneRecipes();\n    // console.log('liste de receitas feitas', doneRecipesList);\n    // console.log('lista de receitas filtradas', filteredDoneRecipes);\n  }, []);\n\n  function copyDetailsPageLink(recipe) {\n    copy(`http://localhost:3000/${recipe.type}s/${recipe.id}`);\n    setCopied(true);\n  }\n\n  function filterDoneRecipes({ target: { innerText: name } }) {\n    if (name === 'All') {\n      setFilteredDoneRecipes(doneRecipesList);\n    }\n    if (name === 'Food') {\n      const filteredByFood = doneRecipesList\n        .filter((rec) => rec.type === 'comida');\n      setFilteredDoneRecipes(filteredByFood);\n    }\n    if (name === 'Drinks') {\n      const filteredByDrink = doneRecipesList\n        .filter((rec) => rec.type === 'bebida');\n      setFilteredDoneRecipes(filteredByDrink);\n    }\n  }\n\n  function renderRecipe(recipe, index) {\n    if (recipe.type === 'comida') {\n      return (\n        <div key={ recipe.name }>\n          <Link to={ `/comidas/${recipe.id}` }>\n            <img\n              style={ { width: '165px' } }\n              alt={ recipe.name }\n              src={ recipe.image }\n              data-testid={ `${index}-horizontal-image` }\n            />\n          </Link>\n          <Link to={ `/comidas/${recipe.id}` }>\n            <h2 data-testid={ `${index}-horizontal-name` }>{ recipe.name }</h2>\n          </Link>\n          <span\n            data-testid={ `${index}-horizontal-top-text` }\n          >\n            { `${recipe.area} - ${recipe.category}` }\n          </span>\n          <span\n            data-testid={ `${index}-horizontal-done-date` }\n          >\n            { recipe.doneDate }\n          </span>\n          {/* { recipe.tags\n            .filter((_tag, ind) => ind < 2)\n            .map((tag) => (\n              <span\n                key={ tag }\n                data-testid={ `${index}-${tag}-horizontal-tag` }\n              >\n                { tag }\n              </span>\n            )) } */}\n          <button\n            type=\"button\"\n            data-testid={ `${index}-horizontal-share-btn` }\n            src={ shareIcon }\n            onClick={ () => copyDetailsPageLink(recipe) }\n          >\n            <img src={ shareIcon } alt=\"compartilhar\" />\n            { copied && 'Link copiado!' }\n          </button>\n        </div>);\n    }\n    if (recipe.type === 'bebida') {\n      return (\n        <div key={ recipe.name }>\n          <Link to={ `/bebidas/${recipe.id}` }>\n            <img\n              style={ { width: '165px' } }\n              alt={ recipe.name }\n              src={ recipe.image }\n              data-testid={ `${index}-horizontal-image` }\n            />\n          </Link>\n          <Link to={ `/bebidas/${recipe.id}` }>\n            <h2 data-testid={ `${index}-horizontal-name` }>{ recipe.name }</h2>\n          </Link>\n          <span\n            data-testid={ `${index}-horizontal-top-text` }\n          >\n            { `${recipe.category} - ${recipe.alcoholicOrNot}` }\n          </span>\n          <span>{ recipe.alcoholicOrNot }</span>\n          <span>{ recipe.area }</span>\n          <span\n            data-testid={ `${index}-horizontal-done-date` }\n          >\n            { recipe.doneDate }\n          </span>\n          <button\n            type=\"button\"\n            data-testid={ `${index}-horizontal-share-btn` }\n            src={ shareIcon }\n            onClick={ () => copyDetailsPageLink(recipe) }\n          >\n            <img src={ shareIcon } alt=\"compartilhar\" />\n            { copied && 'Link copiado!' }\n          </button>\n          {/* { recipe.tags\n            .filter((_tag, ind) => ind < 2)\n            .map((tag) => (\n              <span\n                key={ `${tag}-${index}` }\n                data-testid={ `${index}-${tag}-horizontal-tag` }\n              >\n                { tag }\n              </span>\n            )) } */}\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div>\n      <Header name=\"Receitas Feitas\" icon=\"false\" />\n      <button\n        type=\"button\"\n        className=\"filter-btn\"\n        data-testid=\"filter-by-all-btn\"\n        onClick={ (e) => filterDoneRecipes(e) }\n      >\n        All\n      </button>\n      <button\n        type=\"button\"\n        className=\"filter-btn\"\n        data-testid=\"filter-by-food-btn\"\n        onClick={ (e) => filterDoneRecipes(e) }\n      >\n        Food\n      </button>\n      <button\n        type=\"button\"\n        className=\"filter-btn\"\n        data-testid=\"filter-by-drink-btn\"\n        onClick={ (e) => filterDoneRecipes(e) }\n      >\n        Drinks\n      </button>\n\n      { filteredDoneRecipes.length > 0 && filteredDoneRecipes\n        .map((recipe, index) => (renderRecipe(recipe, index))) }\n    </div>\n  );\n}\n\nexport default DoneRecipes;\n\n// const mockDoneRecipes = [{\n//   id: 500,\n//   type: 'comida',\n//   area: 'Brasil',\n//   category: 'comida mineira',\n//   alcoholicOrNot: '',\n//   name: 'Tropeiro',\n//   image: 'https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.soubh.com.br%2Fnoticias%2Fgastronomia%2Fdia-do-feijao-tropeiro-restaurantes-em-bh&psig=AOvVaw0pjipbI3VwLNhdJEIzsBYt&ust=1617306383060000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCKjDhfal2-8CFQAAAAAdAAAAABAD',\n//   doneDate: 'hoje',\n//   tags: ['deliciosa', 'caseira'],\n// }];\n\n// useEffect(() => {\n//   localStorage.setItem('doneRecipes', JSON.stringify(mockDoneRecipes));\n// }, []);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './CardFavorite.css';\nimport copy from 'clipboard-copy';\n\nimport { Link } from 'react-router-dom';\nimport shareIcon from '../../images/shareIcon.svg';\nimport favIcon from '../../images/blackHeartIcon.svg';\n\nfunction CardFavorites({ img, id, type, index, removeFavorite, alt, title, desc }) {\n  const [copyLink, setCopyLink] = useState(false);\n\n  const copyLinkFn = () => {\n    setCopyLink(true);\n    copy(`http://localhost:3000/${type}s/${id}`);\n  };\n\n  return (\n    <div className=\"cardFav-container\">\n      <Link to={ `/${type}s/${id}` }>\n        <img\n          className=\"imagem-fav\"\n          data-testid={ `${index}-horizontal-image` }\n          src={ img }\n          alt={ alt }\n        />\n      </Link>\n      <div className=\"cardFav-content\">\n        <p data-testid={ `${index}-horizontal-top-text` }>{desc}</p>\n        <Link to={ `/${type}s/${id}` }>\n          <h4 data-testid={ `${index}-horizontal-name` }>{title}</h4>\n        </Link>\n        <div className=\"iconFav\">\n          <button type=\"button\" className=\"share-btn\" onClick={ () => copyLinkFn() }>\n            <img\n              data-testid={ `${index}-horizontal-share-btn` }\n              className=\"icon-fav\"\n              src={ shareIcon }\n              alt=\"share\"\n            />\n            {copyLink && 'Link copiado!' }\n          </button>\n          <button\n            type=\"button\"\n            className=\"favorite-btn\"\n            onClick={ () => removeFavorite(index, id) }\n          >\n            <img\n              data-testid={ `${index}-horizontal-favorite-btn` }\n              className=\"icon-fav share-btn \"\n              src={ favIcon }\n              alt=\"favotire\"\n            />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nCardFavorites.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  alt: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  desc: PropTypes.string.isRequired,\n  removeFavorite: PropTypes.func.isRequired,\n};\n\nexport default CardFavorites;\n","import React, { useState } from 'react';\nimport CardFavorites from '../../components/Card/CardFavorites';\nimport Header from '../../components/Header';\n\nfunction FavRecipes() {\n  const [filter, setFilter] = useState('');\n  const [, forceUpdate] = useState('');\n  const favorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  console.log(favorites);\n\n  const removeFavorite = (idx, id) => {\n    console.log(idx);\n    const newLocalStorage = favorites.filter((_, index) => index !== idx);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newLocalStorage));\n    forceUpdate(id);\n  };\n\n  return (\n    <div>\n      <Header\n        name=\"Receitas Favoritas\"\n        currentPage=\"Fav\"\n        icon=\"false\"\n      />\n      <div className=\"filter-btn\">\n        <button\n          data-testid=\"filter-by-all-btn\"\n          type=\"button\"\n          onClick={ () => setFilter('') }\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-food-btn\"\n          onClick={ () => setFilter('comida') }\n        >\n          Comidas\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-drink-btn\"\n          onClick={ () => setFilter('bebida') }\n        >\n          Bebidas\n        </button>\n      </div>\n      <main>\n        {\n          favorites\n            .filter((item) => {\n              if (filter === '') return item;\n              return item.type === filter;\n            })\n            .map((card, index) => {\n              console.log('o item map', card);\n              console.log('com index', index);\n              return (\n                <CardFavorites\n                  key={ card.id }\n                  index={ index }\n                  img={ card.image }\n                  id={ card.id }\n                  removeFavorite={ removeFavorite }\n                  title={ card.name }\n                  alt={ card.name }\n                  type={ card.type }\n                  desc={ card.type === 'bebida'\n                    ? card.alcoholicOrNot\n                    : `${card.area} - ${card.category}` }\n                />\n              );\n            })\n        }\n      </main>\n    </div>\n  );\n}\n\nexport default FavRecipes;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { DrinkDetails, DrinkInProgress, Drinks } from '../pages/Drinks';\nimport {\n  Explorer,\n  ExplorerDrink,\n  ExplorerDrinksIngredients,\n  ExplorerFood,\n  ExplorerFoodsIngredients,\n  ExplorerFoodsRegion\n} from '../pages/Explorer';\nimport { FoodDetails, FoodInProgress, Foods } from '../pages/Foods';\nimport Login from '../pages/Login';\nimport NotFound from '../pages/NotFound';\nimport { DoneRecipes, FavRecipes, Profile } from '../pages/Profile';\n\nfunction routes() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/recipes-app/comidas\" component={ Foods } />\n        <Route path=\"/recipes-app/bebidas\" component={ Drinks } />\n        <Route path=\"/recipes-app/comidas/:id\" component={ FoodDetails } />\n        <Route path=\"/recipes-app/bebidas/:id\" component={ DrinkDetails } />\n        <Route path=\"/recipes-app/comidas/:id/in-progress\" component={ FoodInProgress } />\n        <Route path=\"/recipes-app/bebidas/:id/in-progress\" component={ DrinkInProgress } />\n        <Route path=\"/recipes-app/explorar\" component={ Explorer } />\n        <Route path=\"/recipes-app/explorar/comidas\" component={ ExplorerFood } />\n        <Route path=\"/recipes-app/explorar/bebidas\" component={ ExplorerDrink } />\n        <Route\n          path=\"/recipes-app/explorar/comidas/ingredientes\"\n          component={ ExplorerFoodsIngredients }\n        />\n        <Route\n          path=\"/recipes-app/explorar/bebidas/ingredientes\"\n          component={ ExplorerDrinksIngredients }\n        />\n        <Route path=\"/recipes-app/explorar/comidas/area\" component={ ExplorerFoodsRegion } />\n        <Route path=\"/recipes-app/perfil\" component={ Profile } />\n        <Route path=\"/recipes-app/receitas-feitas\" component={ DoneRecipes } />\n        <Route path=\"/recipes-app/receitas-favoritas\" component={ FavRecipes } />\n        <Route exact path=\"/recipes-app\" component={ Login } />\n        <Route component={ NotFound } />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default routes;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport './App.css';\nimport ContextDrink from './context/ContextDrink';\nimport ContextFood from './context/ContextFood';\nimport Routes from './routes/routes';\n\nfunction App() {\n  const coveringStyle = {\n    backgroundColor: 'rgb(60, 60, 60)',\n    width: '150%',\n    borderRadius: '10px',\n    padding: '1em',\n  };\n  return (\n    <div style={ coveringStyle }>\n      <ContextFood>\n        <ContextDrink>\n          <Routes />\n        </ContextDrink>\n      </ContextFood>\n    </div>\n  );\n}\n\nexport default App;\n\n// import styled from 'styled-components';\n// import React from 'react';\n\n// const AppContainer = styled.div`\n//   width: 100%;\n//   height: 100%\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   justify-content: center;\n// `;\n\n// function App() {\n//   return <AppContainer>Hello</AppContainer>;\n// }\n\n// export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}